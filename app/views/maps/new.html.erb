<div data-turbo="false" style="display: flex; height: 100vh; overflow: hidden;">
  <!-- LEFT SIDE: 40% width -->
  <div style="width: 40%; display: flex; flex-direction: column; background-color: white; padding: 24px;">

    <!-- HEADER (fixed) -->
    <header class="mb-6 flex-shrink-0" style="display: flex; justify-content: space-between; align-items: flex-start;">
      <div>
        <h1 class="text-4xl font-bold text-gray-800 mb-2">Carnet de Voyage</h1>
        <p class="text-sm text-gray-500">Transform your travel notes into interactive maps</p>
      </div>
      <div style="display: flex; gap: 8px;">
        <%= link_to "← Back to Maps", maps_path, class: "text-sm text-blue-600 hover:text-blue-800" %>
      </div>
    </header>

    <% if @map.errors.any? %>
      <div class="mb-4 p-3 flex-shrink-0" style="background-color: #fef2f2; border: 1px solid #fca5a5; border-radius: 0.125rem;">
        <p class="font-medium" style="font-size: 0.875rem; color: #991b1b;"><%= pluralize(@map.errors.count, "error") %> prevented this map from being saved:</p>
        <ul class="mt-2 text-sm list-disc list-inside" style="color: #991b1b;">
          <% @map.errors.each do |error| %>
            <li><%= error.full_message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <%= form_with model: @map, local: true, html: { style: "flex: 1; display: flex; flex-direction: column; min-height: 0;" } do |form| %>
      <!-- Map Title -->
      <div class="flex-shrink-0" style="margin-bottom: 12px;">
        <%= form.text_field :title,
            placeholder: "Enter notes title (e.g., New York Bars, Voyage à Paris)...",
            style: "width: 100%; padding: 16px; border: 1px solid #d1d5db; border-radius: 0.125rem; font-size: 18px; font-weight: 600; color: #374151; background-color: #ffffff; outline: none; box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;" %>
      </div>

      <!-- Trip Notes Form -->
      <div style="flex: 1; display: flex; flex-direction: column; min-height: 0; overflow: hidden;">
        <%= form.text_area :original_text,
            placeholder: "Paste text containing place names, addresses, or landmarks...\n\nExample:\nNew York City\nGive me 5 great cocktail bars\n\n1. The Up & Up is a cocktail bar in the West Village...\n2. The Raines Law Room at The William...",
            style: "flex: 1; padding: 16px; border: 1px solid #d1d5db; border-radius: 0.125rem; resize: none; background-color: #ffffff; color: #111827; width: 100%; box-sizing: border-box; font-size: 15px; line-height: 1.6; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; outline: none; overflow-y: auto;",
            data: { textarea_target: "input" } %>

        <!-- Hidden fields -->
        <%= form.hidden_field :description %>
        <%= form.hidden_field :privacy, value: 'shared_with_link' %>

        <%= form.submit "Extract & Map Places",
            disabled: true,
            data: { submit_button_target: "button", loading_text: "Processing..." },
            class: "bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed text-white font-semibold transition duration-200 flex-shrink-0",
            style: "border-radius: 0.125rem; margin-top: 16px; padding: 12px 24px; width: 100%; border: none; position: relative;" %>

        <!-- Loading Spinner (hidden by default) -->
        <div data-loading-spinner style="display: none; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
          <div style="border: 3px solid rgba(255,255,255,0.3); border-top: 3px solid #ffffff; border-radius: 50%; width: 20px; height: 20px; animation: spin 0.8s linear infinite;"></div>
        </div>
      </div>
    <% end %>

    <!-- Footer Space (5vh) -->
    <div style="height: 5vh; flex-shrink: 0;"></div>
  </div>

  <!-- RIGHT SIDE: 60% width - Map with Tokyo center -->
  <div style="width: 60%; position: relative; overflow: hidden;">
    <div id="preview-map" style="width: 100%; height: 100vh;"></div>
  </div>
</div>

<style>
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const mapboxToken = document.querySelector('meta[name="mapbox-token"]').content;

    if (typeof mapboxgl !== 'undefined') {
      mapboxgl.accessToken = mapboxToken;

      const map = new mapboxgl.Map({
        container: 'preview-map',
        style: 'mapbox://styles/mapbox/streets-v12',
        center: [139.6917, 35.6895], // Tokyo coordinates
        zoom: 11
      });

      // Add navigation controls
      map.addControl(new mapboxgl.NavigationControl());
    }

    // Button disabled state functionality
    function initializeButtonState() {
      const textarea = document.querySelector('[data-textarea-target="input"]');
      const submitButton = document.querySelector('[data-submit-button-target="button"]');
      const loadingSpinner = document.querySelector('[data-loading-spinner]');
      const form = submitButton ? submitButton.closest('form') : null;

      if (textarea && submitButton) {
        // Store original button text
        const originalText = submitButton.value;
        const loadingText = submitButton.dataset.loadingText || 'Processing...';

        // Function to check if textarea has content
        function updateButtonState() {
          const hasContent = textarea.value.trim().length > 0;
          submitButton.disabled = !hasContent;

          // Update styles based on disabled state
          if (hasContent) {
            submitButton.style.backgroundColor = '#2563eb'; // blue-600
            submitButton.style.cursor = 'pointer';
            submitButton.style.color = '#ffffff'; // white text
          } else {
            submitButton.style.backgroundColor = '#9ca3af'; // gray-400
            submitButton.style.cursor = 'not-allowed';
            submitButton.style.color = '#ffffff'; // white text
          }
        }

        // Check on input
        textarea.addEventListener('input', updateButtonState);

        // Check immediately on initialization
        updateButtonState();

        // Handle form submission - show loading state
        if (form) {
          form.addEventListener('submit', function(e) {
            // Show loading state
            submitButton.value = loadingText;
            submitButton.disabled = true;
            submitButton.style.backgroundColor = '#2563eb'; // Keep blue during loading
            submitButton.style.cursor = 'wait';

            // Optional: show spinner (uncomment if you want spinner instead of just text)
            // if (loadingSpinner) {
            //   loadingSpinner.style.display = 'block';
            //   submitButton.style.color = 'transparent'; // Hide text to show spinner
            // }
          });
        }
      }
    }

    // Initialize button state
    initializeButtonState();

    // Also run on turbo:load for Turbo compatibility
    document.addEventListener('turbo:load', initializeButtonState);
  });
</script>
